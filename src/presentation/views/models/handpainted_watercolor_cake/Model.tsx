/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t -T C:\Users\abrka\PhpstormProjects\GetCake\public\models\handpainted_watercolor_cake\scene.gltf -o C:\Users\abrka\PhpstormProjects\GetCake\src\components\models\handpainted_watercolor_cake\Model.tsx 
Files: C:\Users\abrka\PhpstormProjects\GetCake\public\models\handpainted_watercolor_cake\scene.gltf [15.65KB] > C:\Users\abrka\PhpstormProjects\GetCake\src\components\models\handpainted_watercolor_cake\scene-transformed.glb [106.87KB] (-583%)
Author: Anna.Espenstein (https://sketchfab.com/Anna.Espenstein)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/handpainted-watercolor-cake-7f205e2fbfc14d209de9061be603b462
Title: Handpainted watercolor cake
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    frosting001_cake_0: THREE.Mesh
  }
  materials: {
    cake: THREE.MeshBasicMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/handpainted_watercolor_cake/scene-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.frosting001_cake_0.geometry} material={materials.cake} position={[-2.5, -1, -3.401]} rotation={[-Math.PI / 2, 0, 0]} scale={0.0027} />
    </group>
  )
}

useGLTF.preload('/models/handpainted_watercolor_cake/scene-transformed.glb')
