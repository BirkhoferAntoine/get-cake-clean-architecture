/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t C:\Users\abrka\PhpstormProjects\GetCake\public\models\chocolate_cake\scene.gltf -o C:\Users\abrka\PhpstormProjects\GetCake\src\components\models\chocolate_cake\ChocolateCakeModel.tsx 
Author: RPSebb (https://sketchfab.com/RPSebb)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/chocolate-cake-7a1c5357e44b4c63993d7842b188047a
Title: Chocolate Cake
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Cake_Cake_Baked_0: THREE.Mesh
  }
  materials: {
    Cake_Baked: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/chocolate_cake/scene-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, 0, 0]} rotation={[0, 0, 0]} scale={0.33}>
        <group rotation={[0, 0, 0]}>
          <mesh geometry={nodes.Cake_Cake_Baked_0.geometry} material={materials.Cake_Baked} rotation={[-Math.PI / 2, 0 , 0]} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/chocolate_cake/scene-transformed.glb')
